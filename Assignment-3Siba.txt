Q-)Move files from one folder to their respective folders.

gyans@DESKTOP-Q8861V1 MINGW64 ~/TerminalCommands/linux-content/temp (master)
$ for file in `ls *.txt`
> do
> echo $file
> done
abc.txt
def.txt
ghi.txt
jkl.txt

$ for file in `ls *.txt`
> do
> foldername=`echo $file | awk -F. '{print $1}'`;
> echo $foldername
> done
abc
def
ghi
jkl

$ for file in `ls *.txt`
> do
> foldername=`echo $file | awk -F. '{print $1}'`;
> mkdir $foldername
> done

$ ls
HelloWorld.java  abc/  abc.txt  def/  def.txt  ghi/  ghi.txt  jkl/  jkl.txt  temp1/

$ for file in `ls *.txt`
> do
> foldername=`echo $file | awk -F. '{print $1}'`;
> mv $file $foldername
> done

$ ls
HelloWorld.java  abc/  def/  ghi/  jkl/  temp1/

$ ls abc def ghi jkl
abc:
abc.txt

def:
def.txt

ghi:
ghi.txt

jkl:
jkl.txt

Q-)Print last 4 frequently access urls count in sorted order from /var/log/httpd/acces.log.
$ cat access.log | awk '{print $7}' | sort -r | uniq -c | tail -4
     40 /ads.txt
      2 /add-post
      2 /.well-known/acme-challenge/4xM-Y1899BrBIJ76P5Er2sj2VhEtyi_DFvfo6xiMXXw
     27 /

Q-)Print list of last 4 frequently access urls count in sorted order from /var/log/httpd/acces.log
$ cat access.log | awk '{print $7}' | sort -nr | uniq -c | tail -4
     40 /ads.txt
      2 /add-post
      2 /.well-known/acme-challenge/4xM-Y1899BrBIJ76P5Er2sj2VhEtyi_DFvfo6xiMXXw
     27 /

Q-)Print list of web response code count in the unique sorted order at specific hours.
$ cat access.log | awk '{print $9}' | sort | uniq -c
   3176 200
      8 206
     26 304

Q-)Print list of 10 unique sorted client IP from /var/log/httpd/access.log.
$ cat access.log | awk '{print $1}' | sort | uniq -c | tail -10
    323 10.56.21.2
    251 10.56.22.3
    214 10.56.3.4
      9 10.56.34.4
    242 10.56.4.2
      7 10.56.44.4
     40 10.56.46.2
    168 10.56.5.2
    285 10.56.6.4
    186 10.56.9.3
Q-)Print EmployeeName and TotalPay who has BasePay greater than 100000.
$ cat data.csv
Id EmployeeName JobTitle        BasePay OvertimePay OtherPay TotalPay TotalPayBenefits
1  NATHANIEL    GM              167411  0           400184   567595   567595
2  GARY         CAPTAIN         155966  245131      137811   538909   538909
3  ALBERT       CAPTAIN         212739  106088      16452    335279   335279
4  CHRISTOPHER  MECHANIC        77916   56120       198306   332343   332343
5  PATRICK      DEPUTYCHIEF     134401  9737        182234   326373   326373
6  DAVID        ASSTDEPUTY      118602  8601        189082   316285   316285
7  ALSON        BATTALIONCHIEF  92492   89062       134426   315981   315981
8  DAVID        DEPUTYDIRECTOR  256576  0           51322    307899   307899
10 JOANNE       CHIEF           285262  0           17115    302377   302377
12 PATRICIA     CAPTAIN         99722   87082       110804   297608   297608
13 EDWARD       EXECUTIVE       294580  0           0        294580   294580

gyans@DESKTOP-Q8861V1 MINGW64 ~/terminal-commands/linux-content (master)
$ cat data.csv | awk '$4 > 100000'
Id EmployeeName JobTitle        BasePay OvertimePay OtherPay TotalPay TotalPayBenefits
1  NATHANIEL    GM              167411  0           400184   567595   567595
2  GARY         CAPTAIN         155966  245131      137811   538909   538909
3  ALBERT       CAPTAIN         212739  106088      16452    335279   335279
5  PATRICK      DEPUTYCHIEF     134401  9737        182234   326373   326373
6  DAVID        ASSTDEPUTY      118602  8601        189082   316285   316285
8  DAVID        DEPUTYDIRECTOR  256576  0           51322    307899   307899
10 JOANNE       CHIEF           285262  0           17115    302377   302377
13 EDWARD       EXECUTIVE       294580  0           0        294580   294580

Q-)what is the aggregate totalpay of employees whose jobtitle is captain?
$ cat data.csv | grep -i CAPTAIN
2  GARY         CAPTAIN         155966  245131      137811   538909   538909
3  ALBERT       CAPTAIN         212739  106088      16452    335279   335279
12 PATRICIA     CAPTAIN         99722   87082       110804   297608   297608
$ cat data.csv | grep -i CAPTAIN | awk '{sum+=$7} END{print sum}'
1171796

Q-)Print job title and overtime pay who has overtime pay is between 7000 and 10,000.
$ cat data.csv | awk '$5>7000 && $5<10000' | awk '{print $3} {print $5}'
DEPUTYCHIEF
9737
ASSTDEPUTY
8601

Q-)Print average basepay.
$ cat data.csv | awk '{sum+=$4} END{print sum/NR}'
157972

Q-)Find a word "systemd" from all log files in the folder /var/log and print number of occurrence more than 0 against each file.
$ cat access.log | grep -c systemd
0

Q-)Archieve files from /var/log folder which have modified 7 days ago and move it to your backup folder
$ find -type f -mtime -7 -print0
./.git/config./.git/description./.git/HEAD./.git/hooks/applypatch-msg.sample./.git/hooks/commit-msg.sample./.git/hooks/fsmonitor-watchman.sample./.git/hooks/post-update.sample./.git/hooks/pre-applypatch.sample./.git/hooks/pre-commit.sample./.git/hooks/pre-merge-commit.sample./.git/hooks/pre-push.sample./.git/hooks/pre-rebase.sample./.git/hooks/pre-receive.sample./.git/hooks/prepare-commit-msg.sample./.git/hooks/push-to-checkout.sample./.git/hooks/update.sample./.git/index./.git/info/exclude./.git/logs/HEAD./.git/logs/refs/heads/master./.git/logs/refs/remotes/origin/HEAD./.git/objects/pack/pack-e507e6a537bb10712e329e38cf0b222a93ccffc7.idx./.git/objects/pack/pack-e507e6a537bb10712e329e38cf0b222a93ccffc7.pack./.git/packed-refs./.git/refs/heads/master./.git/refs/remotes/origin/HEAD./access.log./data.csv./file.log./linux_chit_sheet.pdf./linux_problem_sheet.pdf./README.md./temp/9./temp/add.sh./temp/arithmatic.sh./temp/arrayTest.sh./temp/dice.sh./temp/empWageCase.sh./temp/empWageV1.sh./temp/empWageV2.sh./temp/empWageV3.sh./temp/evenOdd.sh./temp/factorial.sh./temp/heta.sh./temp/leapYear.sh./temp/prime.sh./temp/rand3Digit.sh./temp/randomAverage.sh./temp/readinput.sh./temp/readWeekCase.sh./temp/singleDigit.sh./temp/singleDigitCase.sh./temp/unitConCase.sh./temp/weekDay.sh

for backup- $ cp temp/weekDay.sh terminal-commands

Q-)Check if a folder exists or not if it's not present then create it.
$ mkdir -p folExit

#!/bin/bash

if [ -d folExit ]
then
        echo "Folder exists";
else
        mkdir -p folExit
        echo "Folder created";
fi

$ ./folderExist.sh
Folder exists

$ rm -r folExit

gyans@DESKTOP-Q8861V1 MINGW64 ~/terminal-commands/linux-content (master)
$ ./folderExist.sh
Folder created

Q-)find the difference between original file and updated file. Apply changes to the original file.
$ mkdir original
$ mkdir updated
$ nano original-file.sh
$ nano updated-file.sh
$ cp original-file.sh original
$ cp updated-file.sh updated

$ Diff original/ updated/
Only in original/: original-file.sh
Only in updated/: updated-file.sh

$ cp -r original temp1/original-backup

$ Diff updated/ temp1/original-backup
Only in temp1/original-backup: original-file.sh
Only in updated/: updated-file.sh

Q-)Append current date to all log files name which has extension .log.1 from a folder.

$ touch abc.log.1 def.log.1 ghi.log.1 jkl.log.1 mno.log.1

$ ls *.log.1
abc.log.1  def.log.1  ghi.log.1  jkl.log.1  mno.log.1

$ for i in ls *.log.1
> do
> mv abc.log.1 abc.$(date +%d%m%y).log.1
> mv def.log.1 def.$(date +%d%m%y).log.1
> mv ghi.log.1 ghi.$(date +%d%m%y).log.1
> mv jkl.log.1 jkl.$(date +%d%m%y).log.1
> mv mno.log.1 mno.$(date +%d%m%y).log.1
> break
> done

$ ls *.log.1
abc.220821.log.1  def.220821.log.1  ghi.220821.log.1  jkl.220821.log.1  mno.220821.log.1

Q-)Create a process list table displays process ID, parent process ID, Command name, % of memory consumption, % of CPU usage.
$ ps -a
      PID    PPID    PGID     WINPID   TTY         UID    STIME COMMAND
     1606    1605    1606      10764  pty0      197609 20:43:31 /usr/bin/bash
     1891    1606    1891      13048  pty0      197609 21:20:53 /usr/bin/ps
     1605       1    1605      18868  ?         197609 20:43:31 /usr/bin/mintty
Q-)Set enviornment usersecret="dh34xjaa23" if its already not set.
$ env $usersecret
$ usersecret="dh34xjaa23"
$ echo $usersecret
dh34xjaa23
