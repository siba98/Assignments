Q-)Write a program in the following steps
a. Generates 10 Random 3 Digit number.
b. Store this random numbers into a array.
c. Then find the 2nd largest and the 2nd smallest element without sorting the array.

#!/bin/bash -x

array=();
for(( i=0; i<=10; i++ ))
do
        a=$((($RANDOM%900)+100));
        array[$i]=$a;
done
echo "The numbers in the array is: " ${array[@]}
maximum=${array[0]}
minimum=${array[0]}
for i in ${array[@]}
do
        if [[ $i -gt $maximum ]]
        then
                maximum="$i"
        fi

        if [[ $i -lt $minimum ]]
        then
                minimum="$i"
        fi
done
echo "the maximum number is $maximum"
echo "the minimum number is $minimum"

Q-2)Extend the above program to sort the array and then find the 2nd largest and the 2nd smallest element.

#!/bin/bash -x

array=();
for((i=1; i<=10; i++))
do
        numbers=$((($RANDOM%900)+100));
        array[$i]=$numbers;
done

for((i=1; i<=10; i++))
do
        for((j=$i; j<=10; j++))
        do
                if [ ${array[$i]} -gt ${array[$j]} ]
                then
                        temp=${array[$i]};
                        ${array[$i]}= ${array[$j]};
                        ${array[$j]}= $temp;
                fi
        done
done
echo "The numbers in the array is: " ${array[@]}
echo "second largest number is: " ${array[9]}
echo "second smallest numbers is: " ${array[2]}


Q-3)Extend the Prime Factorization Program to store all the Prime Factors of a number n into an array and finally display the output.

#!/bin/bash -x

read num
c=0;
for((i=2;i<=num;i++))
do
while [ $((num%i)) == 0 ]
do
        array[((c++))]=$((i))
        num=$num/i;
done
done
echo ${array[@]}

Q-4)Write a Program to show Sum of three Integer adds to ZERO.

#!/bin/bash -x

array=(0 1 2 3)
num=${#array[@]}
flag=1;
for((i=0;i<num-2;i++))
do
   for((j=1;j<num-1;j++))
   do
      for((k=1;k<num;k++))
      do
         if [ `expr ${array[i]} + ${array[j]} + ${array[k]} == 0` ]
         then
            echo ${array[i]};
            echo ${array[j]};
            echo ${array[k]};
            flag=1;
         fi
      done
   done
done
if [ $flag == 0 ]
then
   echo "no numbers founded"
fi


Q-5)Take a range from 0 â€“ 100, find the digits that are repeated twice like 33, 77, etc and store them in an array.

#!/bin/bash

array=();
for(( i=1; i<100; i++ ))
do
        if [ $(($i % 11)) -eq 0 ]
        then
                array[$i]=$i;
        fi
done
echo ${array[@]}

$ ./sameDigitArray.sh
11 22 33 44 55 66 77 88 99
