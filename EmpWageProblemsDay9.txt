[UC1]-Check Employee is Present or Absent.

#!/bin/bash -x

isPresent=1;
randomCheck=$((RANDOM%2));
if [ $isPresent == $randomCheck ]
then
        echo "Employee is present"
else
        echo "Employee is absent"
fi

[UC2]-Calculate Daily Employee Wage.
-Assume Wage per Hour is 20.
-Assume Full Day Hour is 8.

#!/bin/bash -x

isPresent=1;
randomCheck=$((RANDOM%2));
if [ $isPresent == $randomCheck ]
then
        empRatePerHr=20;
        empHrs=8;
        salary=$((empRatePerHr*empHrs))
else
        salary=0;
fi

[UC3]-Add Part time Employee & Wage.

#!/bin/bash -x

isPartTime=1;
isHalfTime=2;
empRatePerHr=20;
randomCheck=$((RANDOM%3));
if [ $isPartTime == $randomCheck ];
then
        empHrs=8;
elif [ $isHalfTime == $randomCheck ];
then
        empHrs=4;
else
        empHrs=0;
fi
salary=$(($empRatePerHr*$empHrs));

[UC4]-Solving using Switch Case Statement.

$ cat empWageCase.sh
#!/bin/bash -x

isPartTime=1;
isFullTime=2;
empRatePerHr=20;
empCheck=$((RANDOM%3));
case $empCheck in
        $isFullTime )
                empHrs=8;;
        $isPartTime )
                empHrs=4;;
        * )
                empHrs=0;;
esac
salary=$(($empHrs*$empRatePerHr));

[UC5]-Calculating Wages for a Month.
- Assume 20 Working Day per Month.

#!/bin/bash -x

isPartTime=1;
isfullTimw=2;
totalSalary=0;
empRatePerHr=20;
numWorkingDays=20;

for (( day=1; day<=$numWorkingDays; day++ ))
do
        empCheck=$((RANDOM%3));
                case $empCheck in
                        $isFullTime )
                                empHrs=8 ;;
                        $isPartTime )
                                empHrs=4 ;;
                        0 )
                                empHrs=0 ;;
                esac
        salary = $(( $empHrs * $empRatePerHr ));
        totalSalary = $(($totalSalary+$salary ));
done

[UC6]-Calculate Wages till a condition of total working hours or days is reached for a month.
- Assume 100 hours and 20 days.

#!/bin/bash -x

# constants for the programm
IS_PART_TIME=1;
IS_FULL_TIME=2;
MAX_HRS_IN_MONTH=4;
EMP_RATE_PER_HR=20;
NUM_WORKING_DAYS=20;

# VARIABLES
totalEmpHr=0;
totalWorkingDays=0;

while [[ $totalEmpHrs -lt $MAX_HRS_IN_MONTH && $totalWorkingDays -lt $NUM_WORKING_DAYS ]]
do
        ((totalWorkingDays ++))
        empCheck=$((RANDOM%3));
         case $empCheck in
      $IS_FULL_TIME)
         empHrs=8
            ;;
      $IS_PART_TIME)
         empHrs=4
            ;;
      *)
         empHrs=0
            ;;
    esac
         totalEmpHrs=$(($totalEmpHrs+$empHrs))
done

totalSalary=$((totalEmpHrs*$EMP_RATE_PER_HR));

[UC7]-Refactor the Code to write a function to get work hours.

#!/bin/bash -x

# constants for the programm
IS_PART_TIME=1;
IS_FULL_TIME=2;
MAX_HRS_IN_MONTH=4;
EMP_RATE_PER_HR=20;
NUM_WORKING_DAYS=20;

# VARIABLES
totalEmpHr=0;
totalWorkingDays=0;

function getWorkHrs() {
        local $empCheck=$1
        case $empCheck in
                $IS_FULL_TIME)
                        empHrs=8
                                ;;
                $IS_PART_TIME)
                        empHrs=4
                                ;;
                *)
                        empHrs=0
                                ;;
        esac
        echo $empHrs
}
while [[ $totalEmpHrs -lt $MAX_HRS_IN_MONTH && $totalWorkingDays -lt $NUM_WORKING_DAYS ]]
do
        ((totalWorkingDays ++))
        empCheck=$((RANDOM%3));
        emprs="$( getWorkHrs $empCheck )"
        totalEmpHrs = $(($totalEmpHrs+$emprs))
done

totalSalary=$((totalEmpHrs*$EMP_RATE_PER_HR));

[UC8]-Store the Daily Wage along with the Total Wage.

#!/bin/bash -x

# constants for the programm
IS_PART_TIME=1;
IS_FULL_TIME=2;
MAX_HRS_IN_MONTH=4;
EMP_RATE_PER_HR=20;
NUM_WORKING_DAYS=20;

# VARIABLES
totalEmpHr=0;
totalWorkingDays=0;

function getWorkHrs() {
        local $empCheck=$1
        case $empCheck in
                $IS_FULL_TIME)
                        empHrs=8
                                ;;
                $IS_PART_TIME)
                        empHrs=4
                                ;;
                *)
                        empHrs=0
                                ;;
        esac
        echo $empHrs
}
function getEmpWage() {
        local empHr=$1
        echo $(($empHr*$EMP_RATE_PER_HR))
}
while [[ $totalEmpHrs -lt $MAX_HRS_IN_MONTH && $totalWorkingDays -lt $NUM_WORKING_DAYS ]]
do
        ((totalWorkingDays ++))
        empCheck=$((RANDOM%3));
        emprs="$( getWorkHrs $empCheck )"
        totalEmpHrs = $(($totalEmpHrs+$emprs))
        dailyWage[$totalWorkingDays]=$((R))
done

totalSalary=$((totalEmpHrs*$EMP_RATE_PER_HR));
echo ${dailyWage[@]}

[UC9]-Store the Day and the Daily Wage along with the Total Wage.

#!/bin/bash -x

# constants for the programm

IS_PART_TIME=1;
IS_FULL_TIME=2;
MAX_HRS_IN_MONTH=4;
EMP_RATE_PER_HR=20;
NUM_WORKING_DAYS=20;

# VARIABLES
totalEmpHr=0;
totalWorkingDays=0;

declare -A dailyWage;

function getWorkHrs() {
        local $empCheck=$1
        case $empCheck in
                $IS_FULL_TIME )
                        empHrs=8;
                                ;;
                $IS_PART_TIME )
                        empHrs=4;
                                ;;
                *)
                        echo $empHrs=0
                                ;;
        esac
        echo $empHrs
}

function getEmpWage() {
        local empHr=$1
        echo $(($empHr*$EMP_RATE_PER_HR))
}

while [[ $totalEmpHrs -lt $MAX_HRS_IN_MONTH && $totalWorkingDays -lt $NUM_WORKING_DAYS ]]
do
        ((totalWorkingDays++))
        empCheck=$((RANDOM%3));
        empHrs="$( getWorkHrs $empCheck )"
        totalEmpHrs = $(($totalEmpHrs+$empHrs))
        dailyWage["Day"$totalWorkingDays]="$( getEmpWage $empHrs )"
done

totalSalary=$((totalEmpHrs*$EMP_RATE_PER_HR));
echo ${dailyWage[@]}
echo ${!dailyWage[@]}
